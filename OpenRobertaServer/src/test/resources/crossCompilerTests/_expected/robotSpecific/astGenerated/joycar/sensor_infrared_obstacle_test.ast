StmtTextComment[textComment: This program tests the infrared sensors on the left and right. Hold something in front of them to see the robot turning
                        in the corresponding direction
                    ]

(repeat [FOREVER, BoolConst[value: true]]
if SensorExpr [InfraredSensor [OL, OBSTACLE, - EMPTY_SLOT -]]
,thenStmtTextComment[textComment: Robot turns left]
AktionStmt [DisplayImageAction[displayImageMode: IMAGE, valuesToDisplay: Image [[, , #, , ]
[, , , #, ]
[#, #, #, , #]
[, , , #, ]
[, , #, , ]]]]
AktionStmt [TurnAction [direction=LEFT, param=MotionParam [speed=NumConst[value: 50], duration=MotorDuration [type=DEGREE, value=NumConst[value: 1000]]]]]
Var [leftInfraredTested] := BoolConst[value: true]

,else if SensorExpr [InfraredSensor [OR, OBSTACLE, - EMPTY_SLOT -]]
,thenStmtTextComment[textComment: Robot turns right]
AktionStmt [DisplayImageAction[displayImageMode: IMAGE, valuesToDisplay: Image [[, , #, , ]
[, #, , , ]
[#, , #, #, #]
[, #, , , ]
[, , #, , ]]]]
AktionStmt [TurnAction [direction=RIGHT, param=MotionParam [speed=NumConst[value: 50], duration=MotorDuration [type=DEGREE, value=NumConst[value: 1000]]]]]
Var [rightInfraredTested] := BoolConst[value: true]

,else
AktionStmt [DisplayImageAction[displayImageMode: IMAGE, valuesToDisplay: Image [[#, #, #, #, #]
[#, , , , #]
[#, , , , #]
[#, , , , #]
[#, #, #, #, #]]]]
AktionStmt [MotorDriveStopAction[port: - EMPTY_PORT -]]

if SensorExpr [KeysSensor [A, PRESSED, - EMPTY_SLOT -]]
,thenStmtFlowCon[flow: BREAK]

)
